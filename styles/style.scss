/* Importación de fuentes y Bootstrap */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;700&display=swap');
@import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css');

// Variables de colores
$primary-color: #ffb3d9;
$secondary-color: #ffd6eb;
$background-color: #ffe4f7;
$text-color: #4a2c3a;
$light-text: #6d4c5b;

// Mixins reutilizables
@mixin flex-center($direction: row, $gap: 0) {
    display: flex;
    flex-direction: $direction;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

@mixin box-shadow {
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
}

// Estilos generales
body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    background-color: $background-color;
    color: $text-color;
    text-align: center;
}

// Encabezado
header {
    background-color: $primary-color;
    padding: 20px;
    @include box-shadow;
}

.navbar-brand {
    font-size: 28px;
    font-weight: 700;
    color: #fff !important;
}

.navbar-nav .nav-link {
    color: #fff !important;
    font-weight: 600;
    transition: color 0.3s;

    &:hover {
        color: $text-color !important;
    }
}

// Sección Hero
.hero {
    background-color: $secondary-color;
    padding: 50px 20px;
    border-radius: 10px;
    margin: 20px auto;
    max-width: 800px;
    @include box-shadow;

    h2 {
        font-size: 36px;
        color: $text-color;
    }
    p {
        font-size: 18px;
        color: $light-text;
    }
}

// Menú
.menu {
    margin: 50px 0;
    padding: 20px;
}

.menu-grid {
    @include flex-center(row, 20px);
    flex-wrap: wrap;
    max-width: 1000px;
    margin: auto;
}

.menu-item {
    background-color: $primary-color;
    padding: 15px;
    border-radius: 15px;
    width: 280px;
    text-align: center;
    @include box-shadow;

    img {
        width: 100%;
        border-radius: 10px;
    }
    h3 {
        color: $text-color;
    }
    p {
        color: $light-text;
    }
}

// Footer
footer {
    background-color: $primary-color;
    padding: 10px;
    color: #fff;
    margin-top: 30px;
}

// Media Queries
@media (max-width: 768px) {
    .menu-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
        max-width: 300px;
        margin: auto;
    }
    .menu-item {
        max-width: 140px;
        padding: 8px;
    }
    .menu-item h3 {
        font-size: 14px;
    }
    .menu-item p {
        font-size: 12px;
    }
    .menu-item.sobre-nosotros {
        grid-column: span 2;
    }
    footer {
        padding: 8px;
        font-size: 14px;
    }
}

// Mapa de colores
$colors: (
    primary: #ffb3d9,
    secondary: #ffd6eb,
    background: #ffe4f7,
    text-dark: #4a2c3a,
    text-light: #6d4c5b,
    white: #fff
);

// Mapa de tamaños de texto
$font-sizes: (
    small: 12px,
    normal: 16px,
    medium: 18px,
    large: 24px,
    xl: 36px
);

// Mapa de estilos de botones
$buttons: (
    primary: (bg: map-get($colors, primary), text: map-get($colors, white)),
    secondary: (bg: map-get($colors, secondary), text: map-get($colors, text-dark))
);

// Generación de clases de fondo dinámicas
@each $name, $color in $colors {
    .bg-#{$name} {
        background-color: $color;
    }
    .text-#{$name} {
        color: $color;
    }
}

// Generación de clases de tamaño de fuente
@each $size, $value in $font-sizes {
    .font-#{$size} {
        font-size: $value;
    }
}

// Generación de estilos para botones
@each $type, $props in $buttons {
    .btn-#{$type} {
        background-color: map-get($props, bg);
        color: map-get($props, text);
        padding: 10px 20px;
        border: none;
        border-radius: 10px;
        font-size: map-get($font-sizes, normal);
        cursor: pointer;
        transition: all 0.3s ease-in-out;

        &:hover {
            background-color: darken(map-get($props, bg), 10%);
        }
    }
}

